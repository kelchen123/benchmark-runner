server {
    ## block all non-using urls by using specific port
	listen 80 default_server;
	listen [::]:80 default_server;

    ssl_certificate /ibm_crt.crt;
    ssl_certificate_key /ibm_private.key;

	listen 443 ssl default_server;

	server_name _;

	location / {

		auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
		proxy_pass $INTERNAL_URL;
   
	}
}

server {
        # elasticsearch by hostname
        listen 80;
        listen [::]:80;

        # SSL configuration
        ssl_certificate /ibm_crt.crt;
        ssl_certificate_key /ibm_private.key;

        listen 443 ssl;

        server_name $ELASTICSEARCH_URL;

        location / {

                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                proxy_pass http://localhost:9200;
                # for secure elastic url
                auth_basic "Restricted Content";
                auth_basic_user_file /etc/nginx/.htpasswd;
                proxy_http_version 1.1;
		        proxy_set_header Connection "Keep-Alive";
		        proxy_set_header Proxy-Connection "Keep-Alive";
        }
}

server {
        # kibana by hostname
        # SSL configuration
        ssl_certificate /ibm_crt.crt;
        ssl_certificate_key /ibm_private.key;

        listen 443 ssl;

        server_name $KIBANA_URL;

        location / {

                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                auth_basic "Restricted Content";
                auth_basic_user_file /etc/nginx/.htpasswd;
                proxy_pass http://localhost:5601;
                proxy_http_version 1.1;
		        proxy_set_header Connection "Keep-Alive";
		        proxy_set_header Proxy-Connection "Keep-Alive";
        }
}

server {
        # grafana by hostname
        listen 80;
        listen [::]:80;

        # SSL configuration
        ssl_certificate /ibm_crt.crt;
        ssl_certificate_key /ibm_private.key;

        listen 443 ssl;

        server_name $GRAFANA_URL;
        location / {

                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                proxy_pass http://localhost:3000;
        }
}

server {
        # flask by hostname
        # SSL configuration
        ssl_certificate /ibm_crt.crt;
        ssl_certificate_key /ibm_private.key;

        listen 443 ssl;

        server_name $RUN_ARTIFACTS_URL;

        location / {

                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                auth_basic "Restricted Content";
                auth_basic_user_file /etc/nginx/.htpasswd;
                proxy_pass http://localhost:3002;
                proxy_http_version 1.1;
		        proxy_set_header Connection "Keep-Alive";
		        proxy_set_header Proxy-Connection "Keep-Alive";
        }
}

server {
        # jupyterlab by hostname
        listen 80;
        listen [::]:80;

        # SSL configuration
        ssl_certificate /ibm_crt.crt;
        ssl_certificate_key /ibm_private.key;

        listen 443 ssl;

        server_name $JUPYTERLAB_URL;

        location / {

                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                proxy_pass http://localhost:8888;
                proxy_set_header      Host $host;
        }
        # solved kernel issue: https://github.com/jupyter/notebook/issues/625
        location /api/kernels/ {
            proxy_pass            http://localhost:8888;
            proxy_set_header      Host $host;
            # websocket support
            proxy_http_version    1.1;
            proxy_set_header      Upgrade "websocket";
            proxy_set_header      Connection "Upgrade";
            proxy_read_timeout    86400;
        }
        location /terminals/ {
            proxy_pass            http://localhost:8888;
            proxy_set_header      Host $host;
            # websocket support
            proxy_http_version    1.1;
            proxy_set_header      Upgrade "websocket";
            proxy_set_header      Connection "Upgrade";
            proxy_read_timeout    86400;
        }
        location /nbextensions/ {
            proxy_pass http://localhost:8888;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
        location /static/ {
            proxy_pass http://localhost:8888;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
        location /lab/api/ {
            proxy_pass http://localhost:8888;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
        location /lab/ {
             proxy_pass http://localhost:8888;
             proxy_set_header Host $host;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
             proxy_read_timeout 86400;
        }
        location /bokeh/ {
        proxy_pass http://localhost:5006;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        }
}
